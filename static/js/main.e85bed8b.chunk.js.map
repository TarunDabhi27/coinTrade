{"version":3,"sources":["images/trx-logo.png","helper/text.js","components/PebbleButton/PebbleButton.js","database/wallet.js","helper/color.js","components/PebbleLabel/PebbleLabel.js","database/token.js","components/RockWallet/RockWallet.js","components/RockUserProfile/RockUserProfile.js","App.js","reportWebVitals.js","index.js"],"names":["text","buy","sell","trx","up","down","welcome","deposit","withdraw","copy","token","PebbleButton","props","style","className","onClick","e","buttonAction","buttonName","wallet","wallerId","userName","email","trxBalance","colorCode","red","green","PebbleLabel","labelName","trxToken","RockWallet","coinBalance","filter","el","useState","isCopy","setIsCopy","val","console","log","navigator","clipboard","writeText","alert","coinName","color","backgroundColor","RockUserProfile","App","src","trxLogo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e85bed8b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/trx-logo.2e830cf6.png\";","const text = {\r\n    buy: 'BUY',\r\n    sell: 'SELL',\r\n    trx: 'TRX',\r\n    up: 'UP',\r\n    down: 'DOWN',\r\n    welcome: 'Welcome',\r\n    deposit: 'DEPOSIT',\r\n    withdraw: 'WITHDRAW',\r\n    copy: 'COPY',\r\n    token: 'TOKEN'\r\n}\r\n\r\nexport default text;","import text from '../../helper/text';\r\nimport './PebbleButton.css';\r\n\r\nfunction PebbleButton(props) {\r\n  let style = props.style;\r\n  \r\n  function handleClick(e) {\r\n    \r\n    // if(props.buttonName === text.deposit || props.buttonName === text.withdraw){\r\n      props.buttonAction && props.buttonAction.buttonAction(props.buttonName);\r\n//    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"PebbleButton\" style={style} onClick={handleClick}>\r\n       {props.buttonName}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PebbleButton;\r\n","let wallet = [\r\n    {\r\n        wallerId: 'ct0001',\r\n        userName: 'Tarun',\r\n        email: 'td@gmail.com',\r\n        trxBalance: 27.11\r\n    }\r\n];\r\n\r\nexport default wallet;","const colorCode = {\r\n    red: '#ef5350',\r\n    green: '#26a69a'\r\n}\r\n\r\nexport default colorCode;","import colorCode from '../../helper/color';\r\nimport text from '../../helper/text';\r\nimport PebbleButton from '../PebbleButton/PebbleButton';\r\nimport './PebbleLabel.css';\r\n\r\nfunction PebbleLabel(props) {\r\n  let style = props.style;\r\n  let isCopyEnabled = props.copy;\r\n\r\n  return (\r\n    <div className=\"PebbleLabel\" style={style}>\r\n       {props.labelName}\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PebbleLabel;\r\n","let token = {\r\n        trxToken: 'fhnshsnksdosndfhnshsnksdosnd'\r\n    };\r\n\r\nexport default token;","import './RockWallet.css';\r\nimport wallet from '../../database/wallet.js';\r\nimport PebbleLabel from '../PebbleLabel/PebbleLabel.js';\r\nimport colorCode from '../../helper/color';\r\nimport text from '../../helper/text.js';\r\nimport PebbleButton from '../PebbleButton/PebbleButton';\r\nimport { useState } from 'react';\r\nimport token from '../../database/token.js';\r\n\r\nfunction RockWallet(props) {\r\n  let style = props.style;\r\n  let walletDetails = wallet.filter( el => el.wallerId === props.wallerId);\r\n  let coinBalance = walletDetails[0].trxBalance;\r\n  let [isCopy, setIsCopy] = useState(false);\r\n\r\n  function buttonAction(val){\r\n    console.log(val);\r\n    if(val === text.copy){\r\n      setIsCopy(false);\r\n      navigator.clipboard.writeText(token.trxToken);\r\n      alert(`Token has been copied!`);\r\n    }\r\n    if(val === text.deposit){\r\n      setIsCopy(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"RockWallet\" style={style}>\r\n       <PebbleLabel labelName={props.coinName + ': ' + coinBalance} style={{color: colorCode.green}}></PebbleLabel>\r\n       <PebbleButton buttonName={text.deposit} style={{backgroundColor: colorCode.green}} buttonAction={{buttonAction}}></PebbleButton>\r\n       {isCopy ? <PebbleButton buttonName={text.copy} style={{backgroundColor: colorCode.green}} buttonAction={{buttonAction}}></PebbleButton> : ''}\r\n       <PebbleButton buttonName={text.withdraw} style={{backgroundColor: colorCode.red}} buttonAction={{buttonAction}}></PebbleButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RockWallet;\r\n","import './RockUserProfile.css';\r\nimport wallet from '../../database/wallet.js';\r\nimport PebbleLabel from '../PebbleLabel/PebbleLabel.js';\r\nimport colorCode from '../../helper/color';\r\nimport text from '../../helper/text.js';\r\n\r\nfunction RockUserProfile(props) {\r\n  let style = props.style;\r\n  let walletDetails = wallet.filter( el => el.wallerId === props.wallerId);\r\n  let userName = walletDetails[0].userName;\r\n  \r\n  return (\r\n    <div className=\"RockUserProfile\" style={style}>\r\n       <PebbleLabel labelName={text.welcome + ': ' + userName} style={{color: colorCode.green}}></PebbleLabel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RockUserProfile;\r\n","import trxLogo from './images/trx-logo.png';\nimport './App.css';\nimport PebbleButton from './components/PebbleButton/PebbleButton.js';\nimport RockWallet from './components/RockWallet/RockWallet.js';\nimport colorCode from './helper/color.js';\nimport text from './helper/text.js';\nimport RockUserProfile from './components/RockUserProfile/RockUserProfile';\n\nfunction App() {\n  let wallerId = 'ct0001';\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <RockUserProfile coinName={text.trx} wallerId={wallerId}></RockUserProfile>\n        <RockWallet coinName={text.trx} wallerId={wallerId}></RockWallet>\n\n        <PebbleButton buttonName={text.buy} style={{backgroundColor: colorCode.green}}></PebbleButton>\n        <PebbleButton buttonName={text.sell} style={{backgroundColor: colorCode.red}}></PebbleButton>\n        <img src={trxLogo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}