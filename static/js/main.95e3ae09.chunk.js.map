{"version":3,"sources":["images/trx-logo.png","components/PebbleButton/PebbleButton.js","database/wallet.js","components/PebbleLabel/PebbleLabel.js","helper/color.js","components/RockWallet/RockWallet.js","helper/text.js","components/RockUserProfile/RockUserProfile.js","App.js","reportWebVitals.js","index.js"],"names":["PebbleButton","props","style","className","onClick","e","alert","buttonName","wallet","wallerId","userName","email","trxBalance","PebbleLabel","labelName","colorCode","red","green","RockWallet","coinBalance","filter","el","coinName","color","text","buy","sell","trx","up","down","welcome","RockUserProfile","App","backgroundColor","src","trxLogo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAAe,G,KAAA,IAA0B,sC,oBCgB1BA,MAdf,SAAsBC,GACpB,IAAIC,EAAQD,EAAMC,MAMlB,OACE,qBAAKC,UAAU,eAAeD,MAAOA,EAAOE,QAL9C,SAAqBC,GACnBC,MAAM,GAAD,OAAIL,EAAMM,WAAV,iCAIL,SACIN,EAAMM,cCFCC,G,MATF,CACT,CACIC,SAAU,SACVC,SAAU,QACVC,MAAO,eACPC,WAAY,S,MCMLC,MATf,SAAqBZ,GACnB,IAAIC,EAAQD,EAAMC,MAClB,OACE,qBAAKC,UAAU,cAAcD,MAAOA,EAApC,SACID,EAAMa,aCDCC,EALG,CACdC,IAAK,UACLC,MAAO,WCeIC,MAZf,SAAoBjB,GAClB,IAAIC,EAAQD,EAAMC,MAEdiB,EADgBX,EAAOY,QAAQ,SAAAC,GAAE,OAAIA,EAAGZ,WAAaR,EAAMQ,YAC/B,GAAGG,WAEnC,OACE,qBAAKT,UAAU,aAAaD,MAAOA,EAAnC,SACG,cAAC,EAAD,CAAaY,UAAWb,EAAMqB,SAAW,KAAOH,EAAajB,MAAO,CAACqB,MAAOR,EAAUE,YCH9EO,EATF,CACTC,IAAK,MACLC,KAAM,OACNC,IAAK,MACLC,GAAI,KACJC,KAAM,OACNC,QAAS,W,MCYEC,MAZf,SAAyB9B,GACvB,IAAIC,EAAQD,EAAMC,MAEdQ,EADgBF,EAAOY,QAAQ,SAAAC,GAAE,OAAIA,EAAGZ,WAAaR,EAAMQ,YAClC,GAAGC,SAEhC,OACE,qBAAKP,UAAU,kBAAkBD,MAAOA,EAAxC,SACG,cAAC,EAAD,CAAaY,UAAWU,EAAKM,QAAU,KAAOpB,EAAUR,MAAO,CAACqB,MAAOR,EAAUE,YCYzEe,MAjBf,WACE,IAAIvB,EAAW,SACf,OACE,qBAAKN,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAEE,cAAC,EAAD,CAAiBmB,SAAUE,EAAKG,IAAKlB,SAAUA,IAC/C,cAAC,EAAD,CAAYa,SAAUE,EAAKG,IAAKlB,SAAUA,IAE1C,cAAC,EAAD,CAAcF,WAAYiB,EAAKC,IAAKvB,MAAO,CAAC+B,gBAAiBlB,EAAUE,SACvE,cAAC,EAAD,CAAcV,WAAYiB,EAAKE,KAAMxB,MAAO,CAAC+B,gBAAiBlB,EAAUC,OACxE,qBAAKkB,IAAKC,EAAShC,UAAU,WAAWiC,IAAI,eCPrCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.95e3ae09.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/trx-logo.2e830cf6.png\";","import './PebbleButton.css';\r\n\r\nfunction PebbleButton(props) {\r\n  let style = props.style;\r\n  \r\n  function handleClick(e) {\r\n    alert(`${props.buttonName} order is under development`);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"PebbleButton\" style={style} onClick={handleClick}>\r\n       {props.buttonName}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PebbleButton;\r\n","let wallet = [\r\n    {\r\n        wallerId: 'ct0001',\r\n        userName: 'Tarun',\r\n        email: 'td@gmail.com',\r\n        trxBalance: 27.11\r\n    }\r\n];\r\n\r\nexport default wallet;","import './PebbleLabel.css';\r\n\r\nfunction PebbleLabel(props) {\r\n  let style = props.style;\r\n  return (\r\n    <div className=\"PebbleLabel\" style={style}>\r\n       {props.labelName}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PebbleLabel;\r\n","const colorCode = {\r\n    red: '#ef5350',\r\n    green: '#26a69a'\r\n}\r\n\r\nexport default colorCode;","import './RockWallet.css';\r\nimport wallet from '../../database/wallet.js';\r\nimport PebbleLabel from '../PebbleLabel/PebbleLabel.js';\r\nimport colorCode from '../../helper/color';\r\n\r\nfunction RockWallet(props) {\r\n  let style = props.style;\r\n  let walletDetails = wallet.filter( el => el.wallerId === props.wallerId);\r\n  let coinBalance = walletDetails[0].trxBalance;\r\n  \r\n  return (\r\n    <div className=\"RockWallet\" style={style}>\r\n       <PebbleLabel labelName={props.coinName + ': ' + coinBalance} style={{color: colorCode.green}}></PebbleLabel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RockWallet;\r\n","const text = {\r\n    buy: 'BUY',\r\n    sell: 'SELL',\r\n    trx: 'TRX',\r\n    up: 'UP',\r\n    down: 'DOWN',\r\n    welcome: 'Welcome'\r\n}\r\n\r\nexport default text;","import './RockUserProfile.css';\r\nimport wallet from '../../database/wallet.js';\r\nimport PebbleLabel from '../PebbleLabel/PebbleLabel.js';\r\nimport colorCode from '../../helper/color';\r\nimport text from '../../helper/text.js';\r\n\r\nfunction RockUserProfile(props) {\r\n  let style = props.style;\r\n  let walletDetails = wallet.filter( el => el.wallerId === props.wallerId);\r\n  let userName = walletDetails[0].userName;\r\n  \r\n  return (\r\n    <div className=\"RockUserProfile\" style={style}>\r\n       <PebbleLabel labelName={text.welcome + ': ' + userName} style={{color: colorCode.green}}></PebbleLabel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RockUserProfile;\r\n","import trxLogo from './images/trx-logo.png';\nimport './App.css';\nimport PebbleButton from './components/PebbleButton/PebbleButton.js';\nimport RockWallet from './components/RockWallet/RockWallet.js';\nimport colorCode from './helper/color.js';\nimport text from './helper/text.js';\nimport RockUserProfile from './components/RockUserProfile/RockUserProfile';\n\nfunction App() {\n  let wallerId = 'ct0001';\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <RockUserProfile coinName={text.trx} wallerId={wallerId}></RockUserProfile>\n        <RockWallet coinName={text.trx} wallerId={wallerId}></RockWallet>\n\n        <PebbleButton buttonName={text.buy} style={{backgroundColor: colorCode.green}}></PebbleButton>\n        <PebbleButton buttonName={text.sell} style={{backgroundColor: colorCode.red}}></PebbleButton>\n        <img src={trxLogo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}